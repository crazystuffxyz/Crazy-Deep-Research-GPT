import axios from"axios";import{getSubtitles}from"youtube-captions-scraper";function encodeVarint(t){const e=[];for(;t>127;)e.push(127&t|128),t>>>=7;return e.push(t),Buffer.from(e)}function encodeStringField(t,e){const r=encodeVarint(t<<3|2),n=Buffer.from(e,"utf8"),o=encodeVarint(n.length);return Buffer.concat([r,o,n])}function encodeMessage(t){const e=Object.keys(t).sort(((t,e)=>parseInt(t)-parseInt(e))).map((e=>encodeStringField(parseInt(e),t[e])));return Buffer.concat(e)}function getBase64Protobuf(t){return encodeMessage(t).toString("base64")}function extractTranscriptTextWithLinksFromApiResponse(t,e){try{if(!t||!t.actions||0===t.actions.length)return null;const r=t.actions.find((t=>t.updateEngagementPanelAction&&t.updateEngagementPanelAction.content&&t.updateEngagementPanelAction.content.transcriptRenderer));if(!r)return null;const n=r.updateEngagementPanelAction.content.transcriptRenderer;if(!(n&&n.content&&n.content.transcriptSearchPanelRenderer&&n.content.transcriptSearchPanelRenderer.body&&n.content.transcriptSearchPanelRenderer.body.transcriptSegmentListRenderer))return null;const o=n.content.transcriptSearchPanelRenderer.body.transcriptSegmentListRenderer.initialSegments;if(!o||0===o.length)return null;let s="";const a=`https://www.youtube.com/watch?v=${e}`;for(const t of o){const e=t.transcriptSegmentRenderer;if(e&&e.snippet&&e.snippet.runs&&void 0!==e.startMs){const t=(e.snippet.runs||[]).map((t=>t.text)).filter(Boolean).join(" ");if(t.trim()){const r=Math.floor(parseInt(e.startMs)/1e3);s+=`[${`${a}&t=${r}s`}] ${t}\n`}}}return s.trim()||null}catch(t){return console.error("Error extracting transcript text from API response:",t),null}}async function getTranscriptFromApi(t){const e=getBase64Protobuf({1:"asr",2:"en"}),r={"Content-Type":"application/json"},n={context:{client:{clientName:"WEB",clientVersion:"2.20240313"}},params:getBase64Protobuf({1:t,2:e})};try{return extractTranscriptTextWithLinksFromApiResponse((await axios.post("https://www.youtube.com/youtubei/v1/get_transcript",n,{headers:r})).data,t)}catch(t){throw t.response&&t.response.data&&t.response.data.error?new Error(`API Error: ${t.response.data.error.message||"Unknown API error"}`):t.request?new Error("API request made but no response received."):new Error(`Error setting up API request: ${t.message}`)}}function extractVideoId(t){if(!t)return null;const e=[/(?:https?:\/\/)?(?:www\.)?youtube\.com\/(?:watch\?v=|embed\/|v\/|shorts\/|live\/)([a-zA-Z0-9_-]{11})/,/(?:https?:\/\/)?(?:www\.)?youtu\.be\/([a-zA-Z0-9_-]{11})/];for(const r of e){const e=t.match(r);if(e&&e[1])return e[1]}return null}async function getTranscript(t){const e=extractVideoId(t);if(!e)return{error:"Invalid YouTube URL or could not extract Video ID."};try{console.log(`Attempting to fetch transcript for ${e} using youtube-captions-scraper...`);const t=await getSubtitles({videoID:e,lang:"en"});if(t&&t.length>0){let r="";const n=`https://www.youtube.com/watch?v=${e}`;for(const e of t)if(e&&void 0!==e.start&&"string"==typeof e.text){const t=`${n}&t=${Math.floor(parseFloat(e.start))}s`,o=e.text.replace(/\n/g," ").trim();o&&(r+=`[${t}] ${o}\n`)}if(r.trim())return console.log(`Successfully fetched transcript for ${e} using youtube-captions-scraper.`),{transcript:r.trim()}}console.log(`youtube-captions-scraper did not return 'en' captions for ${e}. Trying API fallback.`)}catch(t){console.warn(`youtube-captions-scraper failed for ${e} (lang: en): ${t.message}. Trying API fallback.`)}try{console.log(`Attempting to fetch transcript for ${e} using direct API call (fallback)...`);const t=await getTranscriptFromApi(e);return t?(console.log(`Successfully fetched transcript for ${e} using direct API call.`),{transcript:t}):{error:"No transcript found. Tried youtube-captions-scraper (en) and direct API (en, asr). Video might not have transcripts, or they are disabled."}}catch(e){console.error(`Error processing transcript for ${t} via API fallback:`,e);let r="Failed to fetch YouTube transcript using API fallback method.";return e.message&&(r=e.message.toLowerCase().includes("disabled")?"Transcripts may be disabled for this video (checked via API fallback).":e.message.includes("API Error:")?e.message:`API Fallback Error: ${e.message}`),{error:r}}}export{getTranscript,extractVideoId};