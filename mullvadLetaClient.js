import axios from"axios";const MULLVAD_LETA_BASE_URL="https://leta.mullvad.net/search/__data.json",STATIC_MULLVAD_LETA_HEADERS={accept:"*/*","accept-language":"en-US,en;q=0.9",priority:"u=1, i","sec-ch-ua":'"Chromium";v="122", "Not(A:Brand";v="24", "Google Chrome";v="122"',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":'"Windows"',"sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"same-origin","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"};async function fetchMullvadLetaPage(e,t,a,s=1){const n=encodeURIComponent(e),r=new URLSearchParams({q:e,engine:t,page:a.toString(),"x-sveltekit-invalidated":"001"}),o=`${MULLVAD_LETA_BASE_URL}?${r.toString()}`,l={...STATIC_MULLVAD_LETA_HEADERS,...{Referer:`https://leta.mullvad.net/search?q=${n}&engine=${t}&page=${a}`}};for(let e=1;e<=s+1;e++)try{const n=await axios.get(o,{headers:l,timeout:15e3});if(200!==n.status){if(console.warn(`[Leta Client | ${t} | Page ${a}] Non-200 status: ${n.status} on attempt ${e}`),e<=s){await new Promise((t=>setTimeout(t,1e3*e)));continue}throw new Error(`Non-200 status: ${n.status} after ${e} attempts.`)}const r=n.data;if(!r||!Array.isArray(r.nodes)||0===r.nodes.length)return console.warn(`[Leta Client | ${t} | Page ${a}] Unexpected SvelteKit __data.json structure (nodes array missing/empty).`),console.log(JSON.stringify(n.data)),{results:[],hasMore:!1,actualResultsOnPage:0};const i=r.nodes.find((e=>e&&"data"===e.type&&Array.isArray(e.data)));if(!i||i.data.length<4)return console.warn(`[Leta Client | ${t} | Page ${a}] SvelteKit data node or its content is missing/malformed.`),console.log(JSON.stringify(n.data)),{results:[],hasMore:!1,actualResultsOnPage:0};const u=i.data,c=!0===u[1];let g=u.find((e=>Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e))));if(!Array.isArray(g))return console.warn(`[Leta Client | ${t} | Page ${a}] resultTemplateIndices is not an array.`),console.log(JSON.stringify(n.data)),{results:[],hasMore:c,actualResultsOnPage:0};const d=g.map((e=>{if("number"!=typeof e||!u[e])return null;const t=u[e];if("object"!=typeof t||null===t)return null;const a=u[t.title],s=u[t.link],n=u[t.snippet];if(!a||!s||"string"!=typeof s)return null;let r="";try{r=new URL(s).hostname}catch(e){}return{title:String(a||""),link:s,snippet:String(n||""),cite:r}})).filter((e=>null!==e));return{results:d,hasMore:c,actualResultsOnPage:d.length}}catch(t){let a;if(a=axios.isAxiosError(t)?t.response?`Server error ${t.response.status}`:`Network error ${t.code||t.message}`:`Unexpected error: ${t.message}`,e>s)return{results:[],hasMore:!1,actualResultsOnPage:0};await new Promise((t=>setTimeout(t,1500*e)))}return{results:[],hasMore:!1,actualResultsOnPage:0}}export async function getMullvadLetaResults(e,t=20,a=5,s=1,n="google"){if(!e||""===String(e).trim())return[];let r=[];const o=new Set;let l=1,i=!0,u=0;for(;u<a&&i&&r.length<t;){const a=await fetchMullvadLetaPage(e,n,l,s);if(u++,a.results.length>0)for(const e of a.results)if(e.link&&!o.has(e.link)&&(r.push(e),o.add(e.link),r.length>=t)){i=!1;break}a.hasMore&&0!==a.actualResultsOnPage||(i=!1),i&&l++}return r.slice(0,t)}